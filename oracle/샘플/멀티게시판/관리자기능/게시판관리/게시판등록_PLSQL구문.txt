
/*
 * 게시판 저장(등록/수정) PL/SQL 구문
 */
DECLARE
	V_SAVE_METHOD VARCHAR2(1); -- 'B'(기본 INSERT/UPDATE 구문), 'M'(MERGE INTO 구문)
	V_BOARD_NO NUMBER(20,0); -- 0(신규등록), 1~(정보변경)
	V_BOARD_NAME VARCHAR2(500);
	V_BOARD_KIND_CODE VARCHAR2(50);
	V_BOARD_REPLY_FUNC_YN VARCHAR2(1);
	V_BOARD_ORD NUMBER(8,0);
	V_REGUSER VARCHAR2(50);
	V_MODUSER VARCHAR2(50);
	---
	V_BOARD_KIND_CODE_CHECK NUMBER(10,0);
	---
	VALID_CHECK_ERROR EXCEPTION;
	PRAGMA EXCEPTION_INIT (VALID_CHECK_ERROR, -20001);
	NO_SYSTEM_CODE_ERROR EXCEPTION;
	PRAGMA EXCEPTION_INIT (NO_SYSTEM_CODE_ERROR, -20002);
	NO_SAVE_METHOD_ERROR EXCEPTION;
	PRAGMA EXCEPTION_INIT (NO_SAVE_METHOD_ERROR, -20003);
BEGIN
	--- 게시판 등록 정보 설정
	V_SAVE_METHOD := 'M';
	V_BOARD_NO := 0;
	V_BOARD_NAME := '일반게시판03';
	V_BOARD_KIND_CODE := '03';
	V_BOARD_REPLY_FUNC_YN := 'N';
	V_BOARD_ORD := 1;
	V_REGUSER := 'ADMIN';
	V_MODUSER := NULL;
	---
	V_BOARD_KIND_CODE_CHECK := 0;
	--- 유효성 확인
	IF V_BOARD_NAME IS NULL THEN
		RAISE VALID_CHECK_ERROR;
	END IF;
	---
	SELECT COUNT(*) INTO V_BOARD_KIND_CODE_CHECK
	FROM TB_SYS_CODE A
	WHERE A.SYS_CODE_GROUP = 'BOARD_KIND_CODE'
	AND A.SYS_CODE = V_BOARD_KIND_CODE;
	IF V_BOARD_KIND_CODE_CHECK = 0 THEN
		RAISE NO_SYSTEM_CODE_ERROR;
	END IF;
	--- 게시판 입력 처리
	IF V_SAVE_METHOD = 'B' THEN
		IF V_BOARD_NO = 0 THEN
			INSERT INTO TB_BOARD (
				BOARD_NO,
				BOARD_NAME,
				BOARD_KIND_CODE,
				BOARD_REPLY_FUNC_YN,
				BOARD_ORD,
				REGDATE,
				REGUSER,
				MODDATE,
				MODUSER
			)VALUES(
				TB_BOARD_SEQ.NEXTVAL,
				V_BOARD_NAME,
				V_BOARD_KIND_CODE,
				V_BOARD_REPLY_FUNC_YN,
				V_BOARD_ORD,
				SYSDATE,
				V_REGUSER,
				NULL,
				NULL
			);
		ELSE
			UPDATE TB_BOARD SET
				BOARD_NAME = V_BOARD_NAME,
				BOARD_KIND_CODE = V_BOARD_KIND_CODE,
				BOARD_REPLY_FUNC_YN = V_BOARD_REPLY_FUNC_YN,
				BOARD_ORD = V_BOARD_ORD,
				MODDATE = SYSDATE,
				MODUSER = V_MODUSER
			WHERE BOARD_NO = V_BOARD_NO;
		END IF;
	ELSIF V_SAVE_METHOD = 'M' THEN
		MERGE INTO TB_BOARD A
		USING DUAL
			ON (A.BOARD_NO = V_BOARD_NO)
		WHEN MATCHED THEN
			UPDATE SET
				BOARD_NAME = V_BOARD_NAME,
				BOARD_KIND_CODE = V_BOARD_KIND_CODE,
				BOARD_REPLY_FUNC_YN = V_BOARD_REPLY_FUNC_YN,
				BOARD_ORD = V_BOARD_ORD,
				MODDATE = SYSDATE,
				MODUSER = V_MODUSER
		WHEN NOT MATCHED THEN
			INSERT (
				BOARD_NO,
				BOARD_NAME,
				BOARD_KIND_CODE,
				BOARD_REPLY_FUNC_YN,
				BOARD_ORD,
				REGDATE,
				REGUSER,
				MODDATE,
				MODUSER
			) VALUES (
				TB_BOARD_SEQ.NEXTVAL,
				V_BOARD_NAME,
				V_BOARD_KIND_CODE,
				V_BOARD_REPLY_FUNC_YN,
				V_BOARD_ORD,
				SYSDATE,
				V_REGUSER,
				NULL,
				NULL
			);
	ELSE
		RAISE NO_SAVE_METHOD_ERROR;
	END IF;
	--- 결과 메시지 출력
	DBMS_OUTPUT.PUT_LINE('성공적으로 처리 되었습니다.');
	--- 예외 처리
	EXCEPTION
	WHEN VALID_CHECK_ERROR THEN
		DBMS_OUTPUT.PUT_LINE('예외 발생: 필수값이 누락 되었습니다.');
	WHEN NO_SYSTEM_CODE_ERROR THEN
		DBMS_OUTPUT.PUT_LINE('예외 발생: 존재하지 않는 시스템 코드 입니다.');
	WHEN NO_SAVE_METHOD_ERROR THEN
		DBMS_OUTPUT.PUT_LINE('예외 발생: 존재하지 않는 저장 방법 입니다.');
	WHEN OTHERS THEN
		DBMS_OUTPUT.PUT_LINE('예외 발생: 기타 예외');
END;
COMMIT;
