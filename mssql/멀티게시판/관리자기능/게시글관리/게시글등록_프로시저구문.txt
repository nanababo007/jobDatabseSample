
CREATE PROCEDURE [dbo].[PRC_SAVE_BOARD_ARTICLE](
	@V_SAVE_METHOD VARCHAR, -- 'B'(기본 INSERT/UPDATE 구문), 'M'(MERGE INTO 구문)
	@V_BOARD_ARTICLE_NO BIGINT, -- 0(신규등록), 1~(정보변경)
	@V_BOARD_ARTICLE_TITLE VARCHAR(500),
	@V_BOARD_NO INT,
	@V_BOARD_ARTICLE_CONTENT TEXT,
	@V_BOARD_ARTICLE_REPLY_CONTENT TEXT,
	@V_NOTICE_YN VARCHAR(1),
	@V_REGUSER VARCHAR(50),
	@V_MODUSER VARCHAR(50)
)
AS
BEGIN
/*
게시글 저장(등록/수정) 프로시저 구문

EXEC PRC_SAVE_BOARD_ARTICLE
	'M', -- V_SAVE_METHOD
	0, -- V_BOARD_ARTICLE_NO
	'게시글04', -- V_BOARD_ARTICLE_TITLE
	1, -- V_BOARD_NO
	'게시글 내용 04', -- V_BOARD_ARTICLE_CONTENT
	'게시글 답변 내용 04', -- V_BOARD_ARTICLE_REPLY_CONTENT
	'N', -- V_NOTICE_YN
	'ADMIN', -- V_REGUSER
	NULL -- V_MODUSER
;

*/

BEGIN TRY
    --- 변수 선언
	DECLARE @V_BOARD_CHECK INT;
    ---
	DECLARE @ERROR_SEVERITY_NUMBER INT = 0;
	DECLARE @ERROR_STATE_NUMBER INT = 0;
	DECLARE @ERROR_STATE_MESSAGE VARCHAR(500);
    DECLARE @VALID_CHECK_ERROR_NUMBER INT;
    DECLARE @VALID_CHECK_ERROR_MESSAGE VARCHAR(500);
    DECLARE @NO_BOARD_ERROR_NUMBER INT;
    DECLARE @NO_BOARD_ERROR_MESSAGE VARCHAR(500);
    DECLARE @NO_SAVE_METHOD_ERROR_NUMBER INT;
    DECLARE @NO_SAVE_METHOD_ERROR_MESSAGE VARCHAR(500);
    --- 변수 초기화
	SET @V_BOARD_CHECK = 0;
	---
	SET @ERROR_SEVERITY_NUMBER = 16;
	SET @ERROR_STATE_NUMBER = 1;
	SET @ERROR_STATE_MESSAGE = '';
    SET @VALID_CHECK_ERROR_NUMBER = -20001;
    SET @VALID_CHECK_ERROR_MESSAGE = ': 필수값이 누락 되었습니다.';
    SET @NO_BOARD_ERROR_NUMBER = -20002;
    SET @NO_BOARD_ERROR_MESSAGE = ': 존재하지 않는 게시판 입니다.';
    SET @NO_SAVE_METHOD_ERROR_NUMBER = -20003;
    SET @NO_SAVE_METHOD_ERROR_MESSAGE = ': 존재하지 않는 저장 방법 입니다.';
    --- 유효성 확인
	IF ISNULL(@V_BOARD_ARTICLE_TITLE,'') = '' BEGIN
		SET @ERROR_STATE_MESSAGE = CONCAT(CAST(@VALID_CHECK_ERROR_NUMBER AS VARCHAR),@VALID_CHECK_ERROR_MESSAGE);
		RAISERROR(@ERROR_STATE_MESSAGE,@ERROR_SEVERITY_NUMBER,@ERROR_STATE_NUMBER);
    END;
    ---
	SELECT @V_BOARD_CHECK = COUNT(*)
	FROM TB_BOARD A
	WHERE A.BOARD_NO = @V_BOARD_NO;
	IF @V_BOARD_CHECK = 0 BEGIN
		SET @ERROR_STATE_MESSAGE = CONCAT(CAST(@NO_BOARD_ERROR_NUMBER AS VARCHAR),@NO_BOARD_ERROR_MESSAGE);
		RAISERROR(@ERROR_STATE_MESSAGE,@ERROR_SEVERITY_NUMBER,@ERROR_STATE_NUMBER);
    END;
    --- 게시판 입력 처리
    IF @V_SAVE_METHOD = 'B' BEGIN
		IF @V_BOARD_ARTICLE_NO = 0 BEGIN
			INSERT INTO TB_BOARD_ARTICLE (
				BOARD_ARTICLE_TITLE,
				BOARD_NO,
				BOARD_ARTICLE_VIEW_CNT,
				BOARD_ARTICLE_CONTENT,
				BOARD_ARTICLE_REPLY_CONTENT,
				REGDATE,
				REGUSER,
				MODDATE,
				MODUSER
			)VALUES(
				@V_BOARD_ARTICLE_TITLE,
				@V_BOARD_NO,
				0,
				@V_BOARD_ARTICLE_CONTENT,
				@V_BOARD_ARTICLE_REPLY_CONTENT,
				GETDATE(),
				@V_REGUSER,
				NULL,
				NULL
			);
		END ELSE BEGIN
			UPDATE TB_BOARD_ARTICLE SET
				BOARD_ARTICLE_TITLE = @V_BOARD_ARTICLE_TITLE,
				BOARD_NO = @V_BOARD_NO,
				BOARD_ARTICLE_CONTENT = @V_BOARD_ARTICLE_CONTENT,
				BOARD_ARTICLE_REPLY_CONTENT = @V_BOARD_ARTICLE_REPLY_CONTENT,
				NOTICE_YN = @V_NOTICE_YN,
				MODDATE = GETDATE(),
				MODUSER = @V_MODUSER
			WHERE BOARD_ARTICLE_NO = @V_BOARD_ARTICLE_NO;
		END;
    END ELSE IF @V_SAVE_METHOD = 'M' BEGIN
		MERGE INTO TB_BOARD_ARTICLE A
		USING (SELECT 1 AS DUAL) AS B
			ON (A.BOARD_ARTICLE_NO = @V_BOARD_ARTICLE_NO)
		WHEN MATCHED THEN
			UPDATE SET
				BOARD_ARTICLE_TITLE = @V_BOARD_ARTICLE_TITLE,
				BOARD_NO = @V_BOARD_NO,
				BOARD_ARTICLE_CONTENT = @V_BOARD_ARTICLE_CONTENT,
				BOARD_ARTICLE_REPLY_CONTENT = @V_BOARD_ARTICLE_REPLY_CONTENT,
				NOTICE_YN = @V_NOTICE_YN,
				MODDATE = GETDATE(),
				MODUSER = @V_MODUSER
		WHEN NOT MATCHED THEN
			INSERT (
				BOARD_ARTICLE_TITLE,
				BOARD_NO,
				BOARD_ARTICLE_VIEW_CNT,
				BOARD_ARTICLE_CONTENT,
				BOARD_ARTICLE_REPLY_CONTENT,
				REGDATE,
				REGUSER,
				MODDATE,
				MODUSER
			)VALUES(
				@V_BOARD_ARTICLE_TITLE,
				@V_BOARD_NO,
				0,
				@V_BOARD_ARTICLE_CONTENT,
				@V_BOARD_ARTICLE_REPLY_CONTENT,
				GETDATE(),
				@V_REGUSER,
				NULL,
				NULL
			);
    END ELSE BEGIN
		SET @ERROR_STATE_MESSAGE = CONCAT(CAST(@NO_SAVE_METHOD_ERROR_NUMBER AS VARCHAR),@NO_SAVE_METHOD_ERROR_MESSAGE);
		RAISERROR(@ERROR_STATE_MESSAGE,@ERROR_SEVERITY_NUMBER,@ERROR_STATE_NUMBER);
    END;
    PRINT '프로시저가 성공적으로 처리 되었습니다.';
END TRY
BEGIN CATCH
	SET @ERROR_STATE_MESSAGE = CONCAT('오류 발생: ',ERROR_MESSAGE());
	RAISERROR(@ERROR_STATE_MESSAGE,@ERROR_SEVERITY_NUMBER,@ERROR_STATE_NUMBER);
END CATCH;
END;
GO