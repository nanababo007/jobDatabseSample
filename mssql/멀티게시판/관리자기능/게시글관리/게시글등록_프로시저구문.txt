
CREATE OR REPLACE PROCEDURE PRC_SAVE_BOARD_ARTICLE(
	V_SAVE_METHOD IN VARCHAR2, -- 'B'(기본 INSERT/UPDATE 구문), 'M'(MERGE INTO 구문)
	V_BOARD_ARTICLE_NO IN TB_BOARD_ARTICLE.BOARD_ARTICLE_NO%TYPE, -- 0(신규등록), 1~(정보변경)
	V_BOARD_ARTICLE_TITLE IN TB_BOARD_ARTICLE.BOARD_ARTICLE_TITLE%TYPE,
	V_BOARD_NO IN TB_BOARD_ARTICLE.BOARD_NO%TYPE,
	V_BOARD_ARTICLE_CONTENT IN TB_BOARD_ARTICLE.BOARD_ARTICLE_CONTENT%TYPE,
	V_BOARD_ARTICLE_REPLY_CONTENT IN TB_BOARD_ARTICLE.BOARD_ARTICLE_REPLY_CONTENT%TYPE,
	V_NOTICE_YN IN TB_BOARD_ARTICLE.NOTICE_YN%TYPE,
	V_REGUSER IN TB_BOARD_ARTICLE.REGUSER%TYPE,
	V_MODUSER IN TB_BOARD_ARTICLE.MODUSER%TYPE
)
AS
    V_BOARD_CHECK NUMBER(10,0);
    ---
    VALID_CHECK_ERROR_NUMBER NUMBER(10,0);
    VALID_CHECK_ERROR_MESSAGE VARCHAR2(500);
    NO_BOARD_ERROR_NUMBER NUMBER(10,0);
    NO_BOARD_ERROR_MESSAGE VARCHAR2(500);
    NO_SAVE_METHOD_ERROR_NUMBER NUMBER(10,0);
    NO_SAVE_METHOD_ERROR_MESSAGE VARCHAR2(500);
BEGIN
/*
게시글 저장(등록/수정) 프로시저 구문

CALL PRC_SAVE_BOARD_ARTICLE(
	'M', -- V_SAVE_METHOD
	0, -- V_BOARD_ARTICLE_NO
	'게시글04', -- V_BOARD_ARTICLE_TITLE
	1, -- V_BOARD_NO
	'게시글 내용 04', -- V_BOARD_ARTICLE_CONTENT
	'게시글 답변 내용 04', -- V_BOARD_ARTICLE_REPLY_CONTENT
	'N', -- V_NOTICE_YN
	'ADMIN', -- V_REGUSER
	NULL -- V_MODUSER
);

*/
    --- 변수 초기화
	V_BOARD_CHECK := 0;
	---
    VALID_CHECK_ERROR_NUMBER := -20001;
    VALID_CHECK_ERROR_MESSAGE := '필수값이 누락 되었습니다.';
    NO_BOARD_ERROR_NUMBER := -20002;
    NO_BOARD_ERROR_MESSAGE := '존재하지 않는 게시판 입니다.';
    NO_SAVE_METHOD_ERROR_NUMBER := -20003;
    NO_SAVE_METHOD_ERROR_MESSAGE := '존재하지 않는 저장 방법 입니다.';
    --- 유효성 확인
	IF V_BOARD_ARTICLE_TITLE IS NULL THEN
        RAISE_APPLICATION_ERROR(VALID_CHECK_ERROR_NUMBER,VALID_CHECK_ERROR_MESSAGE);
    END IF;
    ---
	SELECT COUNT(*) INTO V_BOARD_CHECK
	FROM TB_BOARD A
	WHERE A.BOARD_NO = V_BOARD_NO;
	IF V_BOARD_CHECK = 0 THEN
        RAISE_APPLICATION_ERROR(NO_BOARD_ERROR_NUMBER,NO_BOARD_ERROR_MESSAGE);
    END IF;
    --- 게시판 입력 처리
    IF V_SAVE_METHOD = 'B' THEN
		IF V_BOARD_ARTICLE_NO = 0 THEN
			INSERT INTO TB_BOARD_ARTICLE (
				BOARD_ARTICLE_NO,
				BOARD_ARTICLE_TITLE,
				BOARD_NO,
				BOARD_ARTICLE_VIEW_CNT,
				BOARD_ARTICLE_CONTENT,
				BOARD_ARTICLE_REPLY_CONTENT,
				REGDATE,
				REGUSER,
				MODDATE,
				MODUSER
			)VALUES(
				TB_BOARD_ARTICLE_SEQ.NEXTVAL,
				V_BOARD_ARTICLE_TITLE,
				V_BOARD_NO,
				0,
				V_BOARD_ARTICLE_CONTENT,
				V_BOARD_ARTICLE_REPLY_CONTENT,
				SYSDATE,
				V_REGUSER,
				NULL,
				NULL
			);
		ELSE
			UPDATE TB_BOARD_ARTICLE SET
				BOARD_ARTICLE_TITLE = V_BOARD_ARTICLE_TITLE,
				BOARD_NO = V_BOARD_NO,
				BOARD_ARTICLE_CONTENT = V_BOARD_ARTICLE_CONTENT,
				BOARD_ARTICLE_REPLY_CONTENT = V_BOARD_ARTICLE_REPLY_CONTENT,
				NOTICE_YN = V_NOTICE_YN,
				MODDATE = SYSDATE,
				MODUSER = V_MODUSER
			WHERE BOARD_ARTICLE_NO = V_BOARD_ARTICLE_NO;
		END IF;
    ELSIF V_SAVE_METHOD = 'M' THEN
		MERGE INTO TB_BOARD_ARTICLE A
		USING DUAL
			ON (A.BOARD_ARTICLE_NO = V_BOARD_ARTICLE_NO)
		WHEN MATCHED THEN
			UPDATE SET
				BOARD_ARTICLE_TITLE = V_BOARD_ARTICLE_TITLE,
				BOARD_NO = V_BOARD_NO,
				BOARD_ARTICLE_CONTENT = V_BOARD_ARTICLE_CONTENT,
				BOARD_ARTICLE_REPLY_CONTENT = V_BOARD_ARTICLE_REPLY_CONTENT,
				NOTICE_YN = V_NOTICE_YN,
				MODDATE = SYSDATE,
				MODUSER = V_MODUSER
		WHEN NOT MATCHED THEN
			INSERT (
				BOARD_ARTICLE_NO,
				BOARD_ARTICLE_TITLE,
				BOARD_NO,
				BOARD_ARTICLE_VIEW_CNT,
				BOARD_ARTICLE_CONTENT,
				BOARD_ARTICLE_REPLY_CONTENT,
				REGDATE,
				REGUSER,
				MODDATE,
				MODUSER
			)VALUES(
				TB_BOARD_ARTICLE_SEQ.NEXTVAL,
				V_BOARD_ARTICLE_TITLE,
				V_BOARD_NO,
				0,
				V_BOARD_ARTICLE_CONTENT,
				V_BOARD_ARTICLE_REPLY_CONTENT,
				SYSDATE,
				V_REGUSER,
				NULL,
				NULL
			);
    ELSE
        RAISE_APPLICATION_ERROR(NO_SAVE_METHOD_ERROR_NUMBER,NO_SAVE_METHOD_ERROR_MESSAGE);
    END IF;
    DBMS_OUTPUT.PUT_LINE('프로시저가 성공적으로 처리 되었습니다.');
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('오류 발생: ' || SQLERRM);
		RAISE;
END;
COMMIT;

