
CREATE PROCEDURE [dbo].[PRC_SAVE_BOARD_ARTICLE](
	@V_SAVE_METHOD VARCHAR, -- 'B'(기본 INSERT/UPDATE 구문), 'M'(MERGE INTO 구문)
	@V_BOARD_ARTICLE_NO BIGINT, -- 0(신규등록), 1~(정보변경)
	@V_BOARD_ARTICLE_TITLE VARCHAR(500),
	@V_BOARD_NO INT,
	@V_BOARD_ARTICLE_CONTENT TEXT,
	@V_BOARD_ARTICLE_REPLY_CONTENT TEXT,
	@V_NOTICE_YN VARCHAR(1),
	@V_REGUSER VARCHAR(50),
	@V_MODUSER VARCHAR(50)
)
AS
BEGIN
/*
게시글 저장(등록/수정) 프로시저 구문

EXEC PRC_SAVE_BOARD_ARTICLE
	'M', -- V_SAVE_METHOD
	0, -- V_BOARD_ARTICLE_NO
	'게시글04', -- V_BOARD_ARTICLE_TITLE
	1, -- V_BOARD_NO
	'게시글 내용 04', -- V_BOARD_ARTICLE_CONTENT
	'게시글 답변 내용 04', -- V_BOARD_ARTICLE_REPLY_CONTENT
	'N', -- V_NOTICE_YN
	'ADMIN', -- V_REGUSER
	NULL -- V_MODUSER
;

*/

BEGIN TRY
    --- 변수 선언
	DECLARE @V_BOARD_CHECK INT;
    ---
	DECLARE @ERROR_SEVERITY_NUMBER INT = 0;
	DECLARE @ERROR_STATE_NUMBER INT = 0;
	DECLARE @ERROR_STATE_MESSAGE VARCHAR(500);
    DECLARE @VALID_CHECK_ERROR_NUMBER INT;
    DECLARE @VALID_CHECK_ERROR_MESSAGE VARCHAR(500);
    DECLARE @NO_BOARD_ERROR_NUMBER INT;
    DECLARE @NO_BOARD_ERROR_MESSAGE VARCHAR(500);
    DECLARE @NO_SAVE_METHOD_ERROR_NUMBER INT;
    DECLARE @NO_SAVE_METHOD_ERROR_MESSAGE VARCHAR(500);
    --- 변수 초기화
	SET @V_BOARD_CHECK = 0;
	---
	SET @ERROR_SEVERITY_NUMBER = 16;
	SET @ERROR_STATE_NUMBER = 1;
	SET @ERROR_STATE_MESSAGE = '';
    SET @VALID_CHECK_ERROR_NUMBER = -20001;
    SET @VALID_CHECK_ERROR_MESSAGE = ': 필수값이 누락 되었습니다.';
    SET @NO_BOARD_ERROR_NUMBER = -20002;
    SET @NO_BOARD_ERROR_MESSAGE = ': 존재하지 않는 게시판 입니다.';
    SET @NO_SAVE_METHOD_ERROR_NUMBER = -20003;
    SET @NO_SAVE_METHOD_ERROR_MESSAGE = ': 존재하지 않는 저장 방법 입니다.';
    --- 유효성 확인
	IF ISNULL(@V_BOARD_ARTICLE_TITLE,'') = '' BEGIN
		SET @ERROR_STATE_MESSAGE = CONCAT(CAST(@VALID_CHECK_ERROR_NUMBER AS VARCHAR),@VALID_CHECK_ERROR_MESSAGE);
		RAISERROR(@ERROR_STATE_MESSAGE,@ERROR_SEVERITY_NUMBER,@ERROR_STATE_NUMBER);
    END;
    ---
	SELECT @V_BOARD_CHECK = COUNT(*)
	FROM TB_BOARD A
	WHERE A.BOARD_NO = @V_BOARD_NO;
	IF @V_BOARD_CHECK = 0 BEGIN
		SET @ERROR_STATE_MESSAGE = CONCAT(CAST(@NO_BOARD_ERROR_NUMBER AS VARCHAR),@NO_BOARD_ERROR_MESSAGE);
		RAISERROR(@ERROR_STATE_MESSAGE,@ERROR_SEVERITY_NUMBER,@ERROR_STATE_NUMBER);
    END;
    --- 게시판 입력 처리
    IF @V_SAVE_METHOD = 'B' BEGIN
		IF @V_BOARD_ARTICLE_NO = 0 BEGIN
			INSERT INTO TB_BOARD_ARTICLE (
				BOARD_ARTICLE_TITLE,
				BOARD_NO,
				BOARD_ARTICLE_VIEW_CNT,
				BOARD_ARTICLE_CONTENT,
				BOARD_ARTICLE_REPLY_CONTENT,
				REGDATE,
				REGUSER,
				MODDATE,
				MODUSER
			)VALUES(
				@V_BOARD_ARTICLE_TITLE,
				@V_BOARD_NO,
				0,
				@V_BOARD_ARTICLE_CONTENT,
				@V_BOARD_ARTICLE_REPLY_CONTENT,
				GETDATE(),
				@V_REGUSER,
				NULL,
				NULL
			);
		END ELSE BEGIN
			UPDATE TB_BOARD_ARTICLE SET
				BOARD_ARTICLE_TITLE = @V_BOARD_ARTICLE_TITLE,
				BOARD_NO = @V_BOARD_NO,
				BOARD_ARTICLE_CONTENT = @V_BOARD_ARTICLE_CONTENT,
				BOARD_ARTICLE_REPLY_CONTENT = @V_BOARD_ARTICLE_REPLY_CONTENT,
				NOTICE_YN = @V_NOTICE_YN,
				MODDATE = GETDATE(),
				MODUSER = @V_MODUSER
			WHERE BOARD_ARTICLE_NO = @V_BOARD_ARTICLE_NO;
		END;
    END ELSE IF @V_SAVE_METHOD = 'M' BEGIN
		MERGE INTO TB_BOARD_ARTICLE A
		USING (SELECT 1 AS DUAL) AS B
			ON (A.BOARD_ARTICLE_NO = @V_BOARD_ARTICLE_NO)
		WHEN MATCHED THEN
			UPDATE SET
				BOARD_ARTICLE_TITLE = @V_BOARD_ARTICLE_TITLE,
				BOARD_NO = @V_BOARD_NO,
				BOARD_ARTICLE_CONTENT = @V_BOARD_ARTICLE_CONTENT,
				BOARD_ARTICLE_REPLY_CONTENT = @V_BOARD_ARTICLE_REPLY_CONTENT,
				NOTICE_YN = @V_NOTICE_YN,
				MODDATE = GETDATE(),
				MODUSER = @V_MODUSER
		WHEN NOT MATCHED THEN
			INSERT (
				BOARD_ARTICLE_TITLE,
				BOARD_NO,
				BOARD_ARTICLE_VIEW_CNT,
				BOARD_ARTICLE_CONTENT,
				BOARD_ARTICLE_REPLY_CONTENT,
				REGDATE,
				REGUSER,
				MODDATE,
				MODUSER
			)VALUES(
				@V_BOARD_ARTICLE_TITLE,
				@V_BOARD_NO,
				0,
				@V_BOARD_ARTICLE_CONTENT,
				@V_BOARD_ARTICLE_REPLY_CONTENT,
				GETDATE(),
				@V_REGUSER,
				NULL,
				NULL
			);
    END ELSE BEGIN
		SET @ERROR_STATE_MESSAGE = CONCAT(CAST(@NO_SAVE_METHOD_ERROR_NUMBER AS VARCHAR),@NO_SAVE_METHOD_ERROR_MESSAGE);
		RAISERROR(@ERROR_STATE_MESSAGE,@ERROR_SEVERITY_NUMBER,@ERROR_STATE_NUMBER);
    END;
    PRINT '프로시저가 성공적으로 처리 되었습니다.';
END TRY
BEGIN CATCH
	SET @ERROR_STATE_MESSAGE = CONCAT('오류 발생: ',ERROR_MESSAGE());
	RAISERROR(@ERROR_STATE_MESSAGE,@ERROR_SEVERITY_NUMBER,@ERROR_STATE_NUMBER);
END CATCH;
END;
GO

==============================================

USE [JobSample]
GO
/****** Object:  StoredProcedure [dbo].[PRC_SAVE_BOARD_ARTICLE_TAG]    Script Date: 2025-06-27 오후 4:14:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		KDH
-- Create date: 2025-06-27
-- Description:	게시글 태그 정보 등록 프로시저
-- =============================================
ALTER PROCEDURE [dbo].[PRC_SAVE_BOARD_ARTICLE_TAG]
	@V_BOARD_NO BIGINT,
	@V_BOARD_ARTICLE_NO BIGINT,
	@V_BOARD_ARTI_TAG_NAMES_STRING VARCHAR(2000),
    @V_REGUSER VARCHAR(50),
    @V_MODUSER VARCHAR(50)
AS
BEGIN
/*
테이블 변수 최대 2만건까지가 최대.
여러번 나누어서 데이터 등록하도록, 분할 등록 처리.

EXEC [dbo].[PRC_SAVE_BOARD_ARTICLE_TAG]
	1, -- @V_BOARD_NO
	1, -- @V_BOARD_ARTICLE_NO
	'TAG1,TAG2,태그3', -- @V_BOARD_ARTI_TAG_NAMES_STRING
    'ADMIN', -- @V_REGUSER
    NULL -- @V_MODUSER
;

*/

	SET NOCOUNT ON;
	---
	DECLARE @TB_BOARD_ARTICLE_TAGS TABLE (
		[TAGS_NO] INT IDENTITY(1,1) PRIMARY KEY NONCLUSTERED,
		[REGDATE] [datetime] NULL,
		[REGUSER] [varchar](50) NULL,
		[MODDATE] [datetime] NULL,
		[MODUSER] [varchar](50) NULL,
		[BOARD_ARTICLE_TAG_NAME] [varchar](200) NULL,
		[BOARD_ARTICLE_TAG_ORD] [bigint] NULL,
		[BOARD_ARTICLE_NO] [bigint] NULL,
		[BOARD_NO] [bigint] NULL,
		[DEL_YN] [varchar](1) NULL
	);
	---
	INSERT INTO @TB_BOARD_ARTICLE_TAGS (
		[REGDATE]
		,[REGUSER]
		,[MODDATE]
		,[MODUSER]
		,[BOARD_ARTICLE_TAG_NAME]
		,[BOARD_ARTICLE_TAG_ORD]
		,[BOARD_ARTICLE_NO]
		,[BOARD_NO]
		,[DEL_YN]
	) SELECT 
		GETDATE() AS [REGDATE]
		,@V_REGUSER AS [REGUSER]
		,GETDATE() AS [MODDATE]
		,@V_MODUSER AS [MODUSER]
		,A.VALUE AS [BOARD_ARTICLE_TAG_NAME]
		,0 AS [BOARD_ARTICLE_TAG_ORD]
		,@V_BOARD_ARTICLE_NO AS [BOARD_ARTICLE_NO]
		,@V_BOARD_NO AS [BOARD_NO]
		,'N' AS [DEL_YN]
	FROM STRING_SPLIT(@V_BOARD_ARTI_TAG_NAMES_STRING,',') A;
	---
	UPDATE @TB_BOARD_ARTICLE_TAGS SET
		[BOARD_ARTICLE_TAG_ORD] = [TAGS_NO]
	;
	---
	INSERT INTO [dbo].[TB_BOARD_ARTICLE_TAG] (
		[REGDATE]
		,[REGUSER]
		,[MODDATE]
		,[MODUSER]
		,[BOARD_ARTICLE_TAG_NAME]
		,[BOARD_ARTICLE_TAG_ORD]
		,[BOARD_ARTICLE_NO]
		,[BOARD_NO]
		,[DEL_YN]
	) SELECT
		A.[REGDATE]
		,A.[REGUSER]
		,A.[MODDATE]
		,A.[MODUSER]
		,A.[BOARD_ARTICLE_TAG_NAME]
		,A.[BOARD_ARTICLE_TAG_ORD]
		,A.[BOARD_ARTICLE_NO]
		,A.[BOARD_NO]
		,A.[DEL_YN]
	FROM @TB_BOARD_ARTICLE_TAGS A;
END

==============================================

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		KDH
-- Create date: 2025-06-28
-- Description:	게시글 태그 정보 등록 프로시저 2
-- =============================================
ALTER PROCEDURE [dbo].[PRC_SAVE_BOARD_ARTICLE_TAG2]
	@V_BOARD_NO BIGINT,
	@V_BOARD_ARTICLE_NO BIGINT,
	@V_BOARD_ARTI_TAG_NAMES_STRING VARCHAR(2000),
    @V_REGUSER VARCHAR(50),
    @V_MODUSER VARCHAR(50)
AS
BEGIN
/*
테이블 변수 최대 2만건까지가 최대.
여러번 나누어서 데이터 등록하도록, 분할 등록 처리.

EXEC [dbo].[PRC_SAVE_BOARD_ARTICLE_TAG2]
	1, -- @V_BOARD_NO
	1, -- @V_BOARD_ARTICLE_NO
	'TAG,TAG2,태그3,태그5', -- @V_BOARD_ARTI_TAG_NAMES_STRING
    'ADMIN', -- @V_REGUSER
    NULL -- @V_MODUSER
;

*/

	SET NOCOUNT ON;
	---
	DECLARE @TB_BOARD_ARTICLE_TAGS TABLE (
		[TAGS_NO] INT IDENTITY(1,1) PRIMARY KEY NONCLUSTERED,
		[BOARD_ARTICLE_TAG_NO] BIGINT NULL,
		[REGDATE] [datetime] NULL,
		[REGUSER] [varchar](50) NULL,
		[MODDATE] [datetime] NULL,
		[MODUSER] [varchar](50) NULL,
		[BOARD_ARTICLE_TAG_NAME] [varchar](200) NULL,
		[BOARD_ARTICLE_TAG_ORD] [bigint] NULL,
		[BOARD_ARTICLE_NO] [bigint] NULL,
		[BOARD_NO] [bigint] NULL,
		[DEL_YN] [varchar](1) NULL
	);
	---
	INSERT INTO @TB_BOARD_ARTICLE_TAGS (
		[REGDATE]
		,[REGUSER]
		,[MODDATE]
		,[MODUSER]
		,[BOARD_ARTICLE_TAG_NAME]
		,[BOARD_ARTICLE_TAG_ORD]
		,[BOARD_ARTICLE_NO]
		,[BOARD_NO]
		,[DEL_YN]
	) SELECT 
		GETDATE() AS [REGDATE]
		,@V_REGUSER AS [REGUSER]
		,GETDATE() AS [MODDATE]
		,@V_MODUSER AS [MODUSER]
		,A.VALUE AS [BOARD_ARTICLE_TAG_NAME]
		,0 AS [BOARD_ARTICLE_TAG_ORD]
		,@V_BOARD_ARTICLE_NO AS [BOARD_ARTICLE_NO]
		,@V_BOARD_NO AS [BOARD_NO]
		,'N' AS [DEL_YN]
	FROM STRING_SPLIT(@V_BOARD_ARTI_TAG_NAMES_STRING,',') A;
	---
	UPDATE @TB_BOARD_ARTICLE_TAGS SET
		[BOARD_ARTICLE_TAG_ORD] = [TAGS_NO]
	;
	---
	MERGE INTO TB_BOARD_ARTICLE_TAG A
	USING (
		SELECT
			A.[REGDATE]
			,A.[REGUSER]
			,A.[MODDATE]
			,A.[MODUSER]
			,A.[BOARD_ARTICLE_TAG_NAME]
			,A.[BOARD_ARTICLE_TAG_ORD]
			,A.[BOARD_ARTICLE_NO]
			,A.[BOARD_NO]
			,A.[DEL_YN]
		FROM @TB_BOARD_ARTICLE_TAGS A
	) AS B
		ON (A.BOARD_ARTICLE_TAG_NAME = B.BOARD_ARTICLE_TAG_NAME)
	WHEN MATCHED THEN
		UPDATE SET
			A.[MODDATE] = B.[MODDATE]
			,A.[MODUSER] = B.[MODUSER]
			,A.[BOARD_ARTICLE_TAG_NAME] = B.[BOARD_ARTICLE_TAG_NAME]
			,A.[BOARD_ARTICLE_TAG_ORD] = B.[BOARD_ARTICLE_TAG_ORD]
			,A.[BOARD_ARTICLE_NO] = B.[BOARD_ARTICLE_NO]
			,A.[BOARD_NO] = B.[BOARD_NO]
			,A.[DEL_YN] = B.[DEL_YN]
	WHEN NOT MATCHED THEN
		INSERT (
			[REGDATE]
			,[REGUSER]
			,[MODDATE]
			,[MODUSER]
			,[BOARD_ARTICLE_TAG_NAME]
			,[BOARD_ARTICLE_TAG_ORD]
			,[BOARD_ARTICLE_NO]
			,[BOARD_NO]
			,[DEL_YN]
		)VALUES(
			B.[REGDATE]
			,B.[REGUSER]
			,B.[MODDATE]
			,B.[MODUSER]
			,B.[BOARD_ARTICLE_TAG_NAME]
			,B.[BOARD_ARTICLE_TAG_ORD]
			,B.[BOARD_ARTICLE_NO]
			,B.[BOARD_NO]
			,B.[DEL_YN]
		);
	---
	DELETE FROM @TB_BOARD_ARTICLE_TAGS;
	INSERT INTO @TB_BOARD_ARTICLE_TAGS (
		[BOARD_ARTICLE_TAG_NO]
		,[REGDATE]
		,[REGUSER]
		,[MODDATE]
		,[MODUSER]
		,[BOARD_ARTICLE_TAG_NAME]
		,[BOARD_ARTICLE_TAG_ORD]
		,[BOARD_ARTICLE_NO]
		,[BOARD_NO]
		,[DEL_YN]
	) SELECT 
		A.[BOARD_ARTICLE_TAG_NO]
		,A.[REGDATE]
		,A.[REGUSER]
		,A.[MODDATE]
		,A.[MODUSER]
		,A.[BOARD_ARTICLE_TAG_NAME]
		,ROW_NUMBER() OVER (ORDER BY A.BOARD_ARTICLE_TAG_NAME ASC) AS [BOARD_ARTICLE_TAG_ORD]
		,A.[BOARD_ARTICLE_NO]
		,A.[BOARD_NO]
		,A.[DEL_YN]
	FROM (
		SELECT
			A.[BOARD_ARTICLE_TAG_NO]
			,A.[REGDATE]
			,A.[REGUSER]
			,A.[MODDATE]
			,A.[MODUSER]
			,A.[BOARD_ARTICLE_TAG_NAME]
			,A.[BOARD_ARTICLE_TAG_ORD]
			,A.[BOARD_ARTICLE_NO]
			,A.[BOARD_NO]
			,A.[DEL_YN]
		FROM TB_BOARD_ARTICLE_TAG A
		WHERE A.[BOARD_NO] = @V_BOARD_NO
	) A;
	---
	UPDATE A SET
		A.[BOARD_ARTICLE_TAG_ORD] = B.[BOARD_ARTICLE_TAG_ORD]
	FROM TB_BOARD_ARTICLE_TAG A
	INNER JOIN @TB_BOARD_ARTICLE_TAGS B
		ON A.[BOARD_ARTICLE_TAG_NO] = B.[BOARD_ARTICLE_TAG_NO];

END
