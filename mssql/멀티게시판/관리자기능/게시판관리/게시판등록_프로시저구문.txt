
CREATE PROCEDURE [dbo].[PRC_SAVE_BOARD](
    @V_SAVE_METHOD VARCHAR(1), -- 'B':(기본 INSERT/UPDATE 구문),'M':(MERGE INTO 구문)
    @V_BOARD_NO INT, -- 0:신규등록,1~:정보변경
    @V_BOARD_NAME NVARCHAR(200),
    @V_BOARD_KIND_CODE VARCHAR(50),
    @V_BOARD_REPLY_FUNC_YN VARCHAR(1),
    @V_BOARD_ORD INT,
    @V_REGUSER VARCHAR(50),
    @V_MODUSER VARCHAR(50)
)
AS
BEGIN
/*
게시판 저장(등록/수정) 프로시저 구문

EXEC [dbo].PRC_SAVE_BOARD 
	'M', -- V_SAVE_METHOD
	0, -- V_BOARD_NO
	'일반게시판05', -- V_BOARD_NAME
	'01', -- V_BOARD_KIND_CODE
	'N', -- V_BOARD_REPLY_FUNC_YN
	1, -- V_BOARD_ORD
	'ADMIN', -- V_REGUSER
	NULL -- V_MODUSER
;

*/

BEGIN TRY
	--- 변수 선언
    DECLARE @V_BOARD_KIND_CODE_CHECK INT;
    ---
	DECLARE @ERROR_SEVERITY_NUMBER INT = 0;
	DECLARE @ERROR_STATE_NUMBER INT = 0;
	DECLARE @ERROR_STATE_MESSAGE VARCHAR(500) = '';
    DECLARE @VALID_CHECK_ERROR_NUMBER INT;
    DECLARE @VALID_CHECK_ERROR_MESSAGE VARCHAR(500);
    DECLARE @NO_SYSTEM_CODE_ERROR_NUMBER INT;
    DECLARE @NO_SYSTEM_CODE_ERROR_MESSAGE VARCHAR(500);
    DECLARE @NO_SAVE_METHOD_ERROR_NUMBER INT;
    DECLARE @NO_SAVE_METHOD_ERROR_MESSAGE VARCHAR(500);
	--- 변수 초기화
    SET @V_BOARD_KIND_CODE_CHECK = 0;
	---
	SET @ERROR_SEVERITY_NUMBER = 16;
	SET @ERROR_STATE_NUMBER = 1;
    SET @VALID_CHECK_ERROR_NUMBER = -20001;
    SET @VALID_CHECK_ERROR_MESSAGE = ': 필수값이 누락 되었습니다.';
    SET @NO_SYSTEM_CODE_ERROR_NUMBER = -20002;
    SET @NO_SYSTEM_CODE_ERROR_MESSAGE = ': 존재하지 않는 시스템 코드 입니다.';
    SET @NO_SAVE_METHOD_ERROR_NUMBER = -20003;
    SET @NO_SAVE_METHOD_ERROR_MESSAGE = ': 존재하지 않는 저장 방법 입니다.';
    --- 유효성 확인
    IF ISNULL(@V_BOARD_NAME,'') = '' BEGIN
		SET @ERROR_STATE_MESSAGE = CONCAT(CAST(@VALID_CHECK_ERROR_NUMBER AS VARCHAR),@VALID_CHECK_ERROR_MESSAGE);
		RAISERROR(@ERROR_STATE_MESSAGE,@ERROR_SEVERITY_NUMBER,@ERROR_STATE_NUMBER);
    END;
    ---
    SELECT @V_BOARD_KIND_CODE_CHECK = COUNT(*)
    FROM TB_SYS_CODE A
    WHERE A.SYS_CODE_GROUP = 'BOARD_KIND_CODE'
    AND A.SYS_CODE = @V_BOARD_KIND_CODE;
	IF @V_BOARD_KIND_CODE_CHECK = 0 BEGIN
		SET @ERROR_STATE_MESSAGE = CONCAT(CAST(@NO_SYSTEM_CODE_ERROR_NUMBER AS VARCHAR),@NO_SYSTEM_CODE_ERROR_MESSAGE);
		RAISERROR(@ERROR_STATE_MESSAGE,@ERROR_SEVERITY_NUMBER,@ERROR_STATE_NUMBER);
    END;
    --- 게시판 입력 처리
    IF @V_SAVE_METHOD = 'B' BEGIN
        IF @V_BOARD_NO = 0 BEGIN
            INSERT INTO TB_BOARD (
                BOARD_NAME,
                BOARD_KIND_CODE,
                BOARD_REPLY_FUNC_YN,
                BOARD_ORD,
                REGDATE,
                REGUSER,
                MODDATE,
                MODUSER
            )VALUES(
                @V_BOARD_NAME,
                @V_BOARD_KIND_CODE,
                @V_BOARD_REPLY_FUNC_YN,
                @V_BOARD_ORD,
                GETDATE(),
                @V_REGUSER,
                NULL,
                NULL
            );
        END ELSE BEGIN
            UPDATE TB_BOARD SET
                BOARD_NAME = @V_BOARD_NAME,
                BOARD_KIND_CODE = @V_BOARD_KIND_CODE,
                BOARD_REPLY_FUNC_YN = @V_BOARD_REPLY_FUNC_YN,
                BOARD_ORD = @V_BOARD_ORD,
                MODDATE = GETDATE(),
                MODUSER = @V_MODUSER
            WHERE BOARD_NO = @V_BOARD_NO;
        END;
    END ELSE IF @V_SAVE_METHOD = 'M' BEGIN
		MERGE INTO TB_BOARD A
		USING (SELECT 1 AS DUAL) AS B
			ON (A.BOARD_NO = @V_BOARD_NO)
		WHEN MATCHED THEN
            UPDATE SET
                BOARD_NAME = @V_BOARD_NAME,
                BOARD_KIND_CODE = @V_BOARD_KIND_CODE,
                BOARD_REPLY_FUNC_YN = @V_BOARD_REPLY_FUNC_YN,
                BOARD_ORD = @V_BOARD_ORD,
                MODDATE = GETDATE(),
                MODUSER = @V_MODUSER
		WHEN NOT MATCHED THEN
			INSERT (
                BOARD_NAME,
                BOARD_KIND_CODE,
                BOARD_REPLY_FUNC_YN,
                BOARD_ORD,
                REGDATE,
                REGUSER,
                MODDATE,
                MODUSER
            ) VALUES (
                @V_BOARD_NAME,
                @V_BOARD_KIND_CODE,
                @V_BOARD_REPLY_FUNC_YN,
                @V_BOARD_ORD,
                GETDATE(),
                @V_REGUSER,
                NULL,
                NULL
            );
    END ELSE BEGIN
		SET @ERROR_STATE_MESSAGE = CONCAT(CAST(@NO_SAVE_METHOD_ERROR_NUMBER AS VARCHAR),@NO_SAVE_METHOD_ERROR_MESSAGE);
		RAISERROR(@ERROR_STATE_MESSAGE,@ERROR_SEVERITY_NUMBER,@ERROR_STATE_NUMBER);
    END;
    PRINT '프로시저가 성공적으로 처리 되었습니다.';
END TRY
BEGIN CATCH
	SET @ERROR_STATE_MESSAGE = CONCAT('오류 발생: ',ERROR_MESSAGE());
	RAISERROR(@ERROR_STATE_MESSAGE,@ERROR_SEVERITY_NUMBER,@ERROR_STATE_NUMBER);
END CATCH;
END;
GO
/****** Object:  StoredProcedure [dbo].[PRC_SAVE_BOARD_ARTICLE]    Script Date: 2025-06-23 오후 4:18:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
